---

- name: Configure neutron controller
  ini_file:
    dest: /etc/neutron/neutron.conf
    section: '{{ item.section }}'
    option: '{{ item.option }}'
    value: '{{ item.value }}'
  notify:
    - Restart neutron server
  with_items:
    # Database
    - section: 'database'
      option: 'connection'
      value: '{{ openstack_neutron_controller_neutron_database_url }}'
    # Midonet
    - section: 'DEFAULT'
      option: 'core_plugin'
      value: 'midonet_v2_ext'
    - section: 'DEFAULT'
      option: 'service_plugins'
      value: >-
        midonet_l3_ext,
        midonet.neutron.services.firewall.plugin.MidonetFirewallPlugin,
        qos,
        neutron_lbaas.services.loadbalancer.plugin.LoadBalancerPluginv2,
        midonet_logging_resource,
        midonet_bgp
    - section: DEFAULT
      option: api_extensions_path
      value: '/usr/lib/python2.7/dist-packages/midonet_ext/neutron/extensions'
    - section: DEFAULT
      option: dhcp_agent_notification
      value: 'False'
    - section: DEFAULT
      option: allow_overlapping_ips
      value: 'True'
    - section: qos
      option: notification_drivers
      value: 'midonet'
    # Messaging
    - section: DEFAULT
      option: rpc_backend
      value: rabbit
    - section: oslo_messaging_rabbit
      option: rabbit_host
      value: '{{ openstack_neutron_controller_rabbit_hostname }}'
    - section: oslo_messaging_rabbit
      option: rabbit_userid
      value: '{{ openstack_neutron_controller_rabbit_username }}'
    - section: oslo_messaging_rabbit
      option: rabbit_password
      value: '{{ openstack_neutron_controller_rabbit_password }}'
    # Service providers
    - section: service_providers
      option: service_provider
      value: 'LOADBALANCERV2:Midonet:midonet_ext.neutron.services.loadbalancer.v2_driver.MidonetLoadBalancerDriver:default'
    # Keystone
    - section: DEFAULT
      option: auth_strategy
      value: keystone
    - section: keystone_authtoken
      option: auth_url
      value: >-
        {{- openstack_neutron_controller_keystone_protocol }}://
        {{- openstack_neutron_controller_keystone_hostname }}:
        {{- openstack_neutron_controller_keystone_admin_port }}/
    - section: keystone_authtoken
      option: auth_uri
      value: >-
        {{- openstack_neutron_controller_keystone_protocol }}://
        {{- openstack_neutron_controller_keystone_hostname }}:
        {{- openstack_neutron_controller_keystone_port }}/
    - section: 'keystone_authtoken'
      option: 'auth_plugin'
      value: 'password'
    - section: keystone_authtoken
      option: memcached_servers
      value: '{{ openstack_neutron_controller_keystone_hostname }}:11211'
    - section: keystone_authtoken
      option: project_domain_name
      value: default
    - section: keystone_authtoken
      option: user_domain_name
      value: default
    - section: keystone_authtoken
      option: project_name
      value: service
    - section: keystone_authtoken
      option: username
      value: neutron
    - section: keystone_authtoken
      option: password
      value: '{{ openstack_neutron_controller_neutron_password }}'
    # Nova
    - section: 'DEFAULT'
      option: 'notify_nova_on_port_status_changes'
      value: 'True'
    - section: 'DEFAULT'
      option: 'notify_nova_on_port_data_changes'
      value: 'True'
    - section: 'nova'
      option: 'auth_url'
      value: >-
        {{- openstack_neutron_controller_keystone_protocol }}://
        {{- openstack_neutron_controller_keystone_hostname }}:
        {{- openstack_neutron_controller_keystone_admin_port }}/
    - section: nova
      option: project_domain_name
      value: default
    - section: nova
      option: user_domain_name
      value: default
    - section: nova
      option: project_name
      value: service
    - section: nova
      option: auth_type
      value: password
    - section: nova
      option: project_name
      value: service
    - section: nova
      option: username
      value: '{{ openstack_neutron_controller_nova_username }}'
    - section: nova
      option: password
      value: '{{ openstack_neutron_controller_nova_password }}'

- name: Link default neutron plugin
  file:
    src: '/etc/neutron/plugins/ml2/ml2_conf.ini'
    dest: '/etc/neutron/plugin.ini'
    owner: neutron
    state: link
  when: ansible_os_family == 'RedHat'

- name: Configure Modular Layer 2 plugin
  ini_file:
    dest: '/etc/neutron/plugins/ml2/ml2_conf.ini'
    section: '{{ item.section }}'
    option: '{{ item.option }}'
    value: '{{ item.value }}'
  notify:
    - Restart neutron server
  with_items:
    - section: 'ml2'
      option: 'type_drivers'
      value: 'midonet,uplink'
    - section: 'ml2'
      option: 'tenant_network_types'
      value: 'midonet'
    - section: 'ml2'
      option: 'mechanism_drivers'
      value: 'midonet'
    - section: 'ml2'
      option: 'extension_drivers'
      value: 'port_security'
    - section: 'ml2_type_flat'
      option: 'flat_networks'
      value: 'public'
    - section: 'MIDONET'
      option: 'client'
      value: 'midonet.neutron.client.api.MidonetApiClient'
    - section: 'MIDONET'
      option: 'midonet_uri'
      value: '{{ openstack_neutron_controller_midonet_api_uri }}'
    - section: 'MIDONET'
      option: 'username'
      value: '{{ openstack_neutron_controller_midonet_api_username }}'
    - section: 'MIDONET'
      option: 'password'
      value: '{{ openstack_neutron_controller_midonet_api_password }}'
    - section: 'MIDONET'
      option: 'project_id'
      value: 'service'

- name: Get current neutron database version
  command: >-
    neutron-db-manage
    --config-file /etc/neutron/neutron.conf
    --config-file {{ openstack_neutron_controller_neutron_plugin_path }}
    current
  always_run: True
  become: True
  become_user: 'neutron'
  changed_when: neutron_db_manage_current.stdout.find('(head)') == -1
  register: neutron_db_manage_current

- name: Migrate neutron database to head version
  command: >-
    neutron-db-manage
    --config-file /etc/neutron/neutron.conf
    --config-file {{ openstack_neutron_controller_neutron_plugin_path }}
    upgrade heads
  become: True
  become_user: 'neutron'
  notify:
    - Restart neutron server
  when: neutron_db_manage_current|changed

- name: Get current networking-midonet database version
  command: 'neutron-db-manage --subproject networking-midonet current'
  always_run: True
  become: True
  become_user: 'neutron'
  changed_when: neutron_db_manage_networking_midonet_current.stdout.find('(head)') == -1
  register: neutron_db_manage_networking_midonet_current

- name: Migrate networking-midonet database to head version
  command: 'neutron-db-manage --subproject networking-midonet upgrade heads'
  become: True
  become_user: 'neutron'
  notify:
    - Restart neutron server
  when: neutron_db_manage_networking_midonet_current|changed
